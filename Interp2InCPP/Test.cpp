#pragma once
#include "Test.h"
#include"interp2.h"
#include<iostream>
#include <stdio.h> 
#include <stdlib.h> 
using namespace std;
void testInterp2() {
	Interp interp;
	double* x = (double*)malloc(sizeof(double*) * 3);
	for (int i = 0; i < 3; i++) {
		x[i] = i;
	}
	double* y = (double*)malloc(sizeof(double*) * 3);
	for (int i = 0; i < 3; i++) {
		y[i] = i;
	}
	double** z = (double**)malloc(sizeof(double*) * 3);
	for (int i = 0; i < 3; i++) {
		z[i] = (double*)malloc(sizeof(double*) * 3);
	}

	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			z[i][j] = i * 3 + j + 1;
		}
	}

	double** a = (double**)malloc(sizeof(double*) * 3);
	for (int i = 0; i < 3; i++) {
		a[i] = (double*)malloc(sizeof(double*) * 11);
	}

	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 11; j++) {
			a[i][j] = 1 + 0.1 * j;
		}
	}
	
	double** b = (double**)malloc(sizeof(double*) * 3);
	for (int i = 0; i < 3; i++) {
		b[i] = (double*)malloc(sizeof(double*) * 11);
	}

	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 11; j++) {
			b[i][j] = 1 + 0.1 * j;
		}
	}

	const char* method = "spl";
	vector<vector<double>> fval(3, vector<double>(11));

	interp.interp2_multiPoint(x, y, z, 3, 3, a, b, 3, 11, fval, method);

	cout << "Test interp2" << endl;
}

void testInterp2_extra() {
	Interp interp;
	double* x = (double*)malloc(sizeof(double*) * 25);
	for (int i = 0; i < 25; i++) {
		x[i] = -3 + i * (0.25);
	}
	double* y = (double*)malloc(sizeof(double*) * 25);
	for (int i = 0; i < 25; i++) {
		y[i] = -3 + i * (0.25);
	}
	double** z = (double**)malloc(sizeof(double*) * 25);
	for (int i = 0; i < 25; i++) {
		z[i] = (double*)malloc(sizeof(double*) * 25);
	}

	double test[25][25] = {
		{6.67128029671744e-05,0.000230751203041992,0.000680103219943971,0.00168134282823801,0.00337797214955247,0.00509645567616060,0.00415627013466886,-0.00503135305937366,-0.0298708013732747,-0.0752194436289304,-0.137323800753813,-0.201047354766937,-0.244954040574350,-0.252730093603293,-0.222833446930309,-0.168723803989597,-0.109959383327874,-0.0616993341282328,-0.0297599977066732,-0.0122911596265628,-0.00431443261698578,-0.00126929549823156,-0.000304219554085176,-5.53992996240769e-05,-5.86418787258953e-06}
,{0.000156107239919014,0.000537853113209837,0.00157063790596263,0.00381236150768769,0.00737520040279676,0.0100932388001538,0.00448203258177478,-0.0244122968212015,-0.0958502884113766,-0.221737384930047,-0.390778533304289,-0.561634989905611,-0.676920031381826,-0.693718977602355,-0.609009567276903,-0.459814919600141,-0.299093420575472,-0.167595815224127,-0.0807480817323247,-0.0333108435591573,-0.0116738352580101,-0.00342492598915753,-0.000816352843621575,-0.000146658119529440,-1.46553039823369e-05}
,{0.000317016606714420,0.00109762197954388,0.00320667374083598,0.00773564508141735,0.0146695573930076,0.0187780706798244,0.00283630723534956,-0.0671218296163771,-0.234564062446204,-0.526002473599126,-0.915005602376747,-1.30660797735638,-1.56924816852056,-1.60466321464405,-1.40633055091566,-1.05993916125966,-0.687860067326928,-0.384131343643002,-0.184112421578922,-0.0753311678390438,-0.0260503563632365,-0.00746874223845377,-0.00170224503440922,-0.000273295281745541,-1.36712291857795e-05}
,{0.000546351387762550,0.00193357137908277,0.00575394871733835,0.0141130314294426,0.0272177285904350,0.0356739359871586,0.00737285266246214,-0.122375076087906,-0.438169896789280,-0.994223061224909,-1.74361684390135,-2.50502325932685,-3.02197490307620,-3.09908638180367,-2.71920431154807,-2.04762569769783,-1.32418212073946,-0.734266904654134,-0.347630276094702,-0.139341746913817,-0.0465245535746090,-0.0125010467580531,-0.00246671843091469,-0.000229995893138136,6.61904437463607e-05}
,{0.000747343378954833,0.00280621829222939,0.00879320180213208,0.0227246474260243,0.0468353859928844,0.0698465282085339,0.0451548639265856,-0.128520145488937,-0.592128429823592,-1.44780306770392,-2.63896827518706,-3.88351158359658,-4.75961210321364,-4.92991400891569,-4.34675367946945,-3.27211037534891,-2.10235128459063,-1.14872766444423,-0.529314988863690,-0.202178955499085,-0.0616397936540922,-0.0134996951808953,-0.00117293035798021,0.000637634132028571,0.000418220023307672}
,{0.000618509808948378,0.00285154809605465,0.0103043071284989,0.0300358646551035,0.0703307498740468,0.127103933069103,0.153201141722290,0.0231917351353450,-0.461928594813591,-1.47829258145356,-3.00441968777985,-4.69614843924183,-5.97288928799865,-6.32652421923138,-5.63819257959571,-4.24134384007720,-2.68666537096189,-1.41981882624332,-0.612501689904589,-0.204492912423049,-0.0441899902201097,0.000704429201135905,0.00626152376621319,0.00365154139004007,0.00142023970715159}
,{-0.000451793659408569,0.000181475257920911,0.00532292141123929,0.0251904611139205,0.0789012042759750,0.185091851080894,0.326540989816410,0.392339530516110,0.148314417593160,-0.679751029725004,-2.18713054580598,-4.07536480044738,-5.68027600189627,-6.32562947546069,-5.76161333740795,-4.31556829009656,-2.63486622927969,-1.27102242373839,-0.440491854893570,-0.0659500938490156,0.0429090193446273,0.0454351112186791,0.0254717579778252,0.0106468516135784,0.00359952078609811}
,{-0.00333355884844221,-0.00805062131493916,-0.0142697666304393,-0.0118730790485605,0.0299180400099191,0.166722539241874,0.448509127653476,0.835809136896700,1.10706187030723,0.882563827194752,-0.138678733410981,-1.84468580197412,-3.60429660148893,-4.60238794154969,-4.39969887260089,-3.22300292446975,-1.73764890089770,-0.556069224694507,0.0792600426008204,0.266025308550672,0.226223817797494,0.132539032515799,0.0610945403253733,0.0232113110746770,0.00743093221086516}
,{-0.00876189249178872,-0.0244272160439084,-0.0564961666384001,-0.103177120227723,-0.130052953004398,-0.0427320504511364,0.300684892438888,0.983849844438079,1.85589171540780,2.45368795436167,2.22472951896164,0.996517564983058,-0.723906172793294,-2.01514871012645,-2.22224591802721,-1.42513394986550,-0.272916548806254,0.580717725393312,0.883377506133349,0.768712786544837,0.499636285295923,0.261141996647573,0.113342111061443,0.0415621358670918,0.0130124860089189}
,{-0.0166443686886710,-0.0489338488195283,-0.122348398661198,-0.254529318418164,-0.423205938467260,-0.509591084387061,-0.280607942964126,0.494662818080819,1.78285267822794,3.08622947958894,3.62651973036497,2.94228239754422,1.39624737440034,-0.00479404261916355,-0.413402840879081,0.203711857906601,1.17599480447786,1.78639146006404,1.77806190553855,1.34575855645026,0.819960617108807,0.413889985512367,0.175995832415510,0.0637215051052987,0.0197879386876209}
,{-0.0255448963728635,-0.0771251509406112,-0.199975278551704,-0.439077032282611,-0.798906633590923,-1.15757116497209,-1.21284843212763,-0.595870012544395,0.796886177398149,2.48794750137110,3.55073157040104,3.30439547906494,1.99752550555100,0.700063446533238,0.389628162344469,1.13882791974368,2.19775088122638,2.75822624914755,2.55952474818518,1.87461419998436,1.12238486849703,0.560887893201790,0.237072325524927,0.0855190247183288,0.0264967518635150}
,{-0.0329674976577414,-0.100985057884106,-0.266890340861245,-0.601965666880963,-1.14124689225508,-1.77521392066941,-2.16347608828224,-1.83585236254366,-0.565901972100249,1.22810973848609,2.56137387561865,2.62535764645892,1.58497760097557,0.525639991479974,0.475565236466430,1.49624153948668,2.75561579411404,3.37214061184112,3.08813188234884,2.24534435042074,1.33875337063272,0.667392938550641,0.281696326272390,0.101538933632243,0.0314488885042906}
,{-0.0365062046131955,-0.112724089544506,-0.301015354168432,-0.688594260100904,-1.33269046695897,-2.14248347300358,-2.77361001945634,-2.71194737800282,-1.65234546386552,0.0635698771090226,1.47960692201463,1.75295228480306,0.981011843123846,0.190390692247813,0.374445718559039,1.57280898236671,2.93693031640863,3.58229247976870,3.26946332643904,2.37177771482935,1.41216125993969,0.703416987855028,0.296773270189998,0.106953482546216,0.0331249499243083}
,{-0.0350987702999607,-0.108870323094894,-0.292406991782269,-0.674090144287550,-1.31902362823203,-2.15653674962794,-2.87332579946723,-2.97860245753263,-2.14914815890735,-0.646890084642503,0.682276109388444,1.05657944542442,0.522811199619173,-0.0280889496101392,0.279478255998953,1.46821720818276,2.76236561350031,3.36183103650183,3.06159439530826,2.21777580977342,1.31929911438573,0.656822594178749,0.277038508594178,0.0998291551081144,0.0309177685778476}
,{-0.0294738356018769,-0.0916329114903753,-0.246809556836877,-0.571062115108641,-1.12300354126263,-1.84935765614326,-2.49234534709375,-2.63759720811703,-1.99681539290585,-0.759886579910004,0.389805020372479,0.796332338174643,0.464071319442010,0.0898069673913882,0.375375578848314,1.34422761813452,2.37681637926400,2.83378857540836,2.55759587076088,1.84423131893539,1.09429867537184,0.543988696688112,0.229237171958761,0.0825573833924952,0.0255595693931655}
,{-0.0215983584037097,-0.0670951195438762,-0.180455776604483,-0.416452076758872,-0.815107553728856,-1.33030244691312,-1.75965450336315,-1.78020017399171,-1.16292965309888,-0.0458152668999726,1.04004930195747,1.55193346354870,1.42256275642457,1.12053693026888,1.17127052036909,1.64917809206140,2.17083009896452,2.31814877051709,1.99252412372058,1.40178548653391,0.820442600143182,0.404521888084870,0.169584613211211,0.0608654499856657,0.0187997388055252}
,{-0.0136690686811646,-0.0421224853841128,-0.111937480211665,-0.253504914320585,-0.480758772065144,-0.740286657247835,-0.863870396407359,-0.599081357728613,0.228899450071770,1.50691616142001,2.79420374931920,3.58548677720556,3.68862956730176,3.34044183925893,2.93444760730479,2.66221625160618,2.43378911592600,2.08436983338270,1.58126008494856,1.03535193937737,0.580454696495137,0.278586333981792,0.114753696549497,0.0406987917436126,0.0124666909080122}
,{-0.00728197369813937,-0.0218561310584888,-0.0557690273169913,-0.118044021503456,-0.197188310761086,-0.225012510593532,-0.0470410307861531,0.547061156379776,1.69444158244685,3.28759463104920,4.91990584542579,6.06501772455628,6.39011712289960,5.93696764066509,5.01900195592646,3.96692166783147,2.96887697607475,2.08895621638608,1.35394258695049,0.790748925475628,0.409277890478003,0.185834195656040,0.0736335178610158,0.0254044152913150,0.00762797615267614}
,{-0.00307823425273999,-0.00853008264245079,-0.0188897558831210,-0.0293056752803987,-0.0120907368044605,0.109429221251656,0.478441146782808,1.27454965401212,2.60761176237977,4.37422894067877,6.19559488169097,7.54134908646230,7.99662024163135,7.48049081679071,6.25127541320694,4.72223801454015,3.25396658516309,2.05380070902711,1.18527584666081,0.621416161036259,0.293410112059764,0.123707913692217,0.0462504568776297,0.0152554848028634,0.00442452313617390}
,{-0.000858906841129125,-0.00164941747016665,-0.000443340967069338,0.0130372597766889,0.0700175000562277,0.241123456564807,0.646397730777741,1.42912223361768,2.67308330901512,4.28956128041709,5.95994955549317,7.21991490885380,7.67232585262065,7.19385912869065,5.98623265314783,4.44571782544809,2.96138948855538,1.77597256469199,0.960693191431585,0.468647337679674,0.205730842854561,0.0809942324783492,0.0284819735404171,0.00891114330663389,0.00247191903891563}
,{1.54886098511813e-05,0.000835628078710607,0.00533184876495885,0.0231597498164276,0.0796679277691729,0.227863130432557,0.553873001098546,1.15780502264113,2.09667904990890,3.30603768449952,4.55688280141759,5.50888347115954,5.85912869147417,5.49890550522524,4.56754950838398,3.36760001013347,2.20993479482407,1.29388528170724,0.677104757921493,0.317041394647564,0.132849228194480,0.0497857648925239,0.0166638011611205,0.00497257578108100,0.00132021444638266}
,{0.000205735494912186,0.00113247900864059,0.00497751605320946,0.0182832037443614,0.0572783942400865,0.154709579682372,0.362603786948165,0.740592002554364,1.32214776744334,2.06807404161179,2.83990885389823,3.42984429600160,3.64933428738067,3.42644329664358,2.84367358439501,2.08943546674641,1.36136198700591,0.787672844613688,0.405223379563446,0.185545245323561,0.0756647364728925,0.0274877762763419,0.00889470586931222,0.00256245760810849,0.000656711233333045}
,{0.000158001240462318,0.000746436422785333,0.00300817013268604,0.0104620556550105,0.0316072809103357,0.0832879431144595,0.191951236885894,0.387680420477591,0.687225920936981,1.07058986687922,1.46735048560517,1.77126788425635,1.88498674796577,1.77023938645480,1.46851316889061,1.07712065197711,0.699199285881175,0.402049026200489,0.204955367502057,0.0926953386967466,0.0372161630039840,0.0132698221868573,0.00420302530427031,0.00118260847987913,0.000295554861014157}
,{8.07512378215114e-05,0.000361838716788341,0.00140760083134439,0.00477648493515265,0.0141803880559904,0.0369042921422324,0.0843115999037468,0.169272692642059,0.298920505324299,0.464644915879848,0.636179285726613,0.767731008380254,0.817106814751380,0.767455620089176,0.636494585621743,0.466405251469703,0.302145329846790,0.173141543710765,0.0878125755725909,0.0394367560334971,0.0156902209458402,0.00553227164967897,0.00172922108564581,0.000479241522054918,0.000117775543903393}
,{3.22353596126927e-05,0.000140909144222289,0.000538554705814049,0.00180412922133762,0.00530573776526038,0.0137133883245709,0.0311759440751708,0.0623806314511368,0.109917990075902,0.170640562939341,0.233495840965575,0.281733568866418,0.299871028226235,0.281668364156577,0.233571072388181,0.171059053658158,0.110684275317802,0.0632997936628590,0.0320076371857648,0.0143149729256089,0.00566438660069548,0.00198365677737952,0.000614950439977396,0.000168796006416645,4.10297274582676e-05}
	};

	for (int i = 0; i < 25; i++) {
		for (int j = 0; j < 25; j++) {
			z[i][j] = test[i][j];
		}
	}

	double** a = (double**)malloc(sizeof(double*) * 49);
	for (int i = 0; i < 49; i++) {
		a[i] = (double*)malloc(sizeof(double*) * 49);
	}

	for (int i = 0; i < 49; i++) {
		for (int j = 0; j < 49; j++) {
			a[i][j] = -3 + 0.125 * j;
		}
	}
	double** b = (double**)malloc(sizeof(double*) * 49);
	for (int i = 0; i < 49; i++) {
		b[i] = (double*)malloc(sizeof(double*) * 49);
	}

	for (int i = 0; i < 49; i++) {
		for (int j = 0; j < 49; j++) {
			b[i][j] = -3 + 0.125 * i;
		}
	}

	const char* method = "spl";
	vector<vector<double>> fval(49, vector<double>(49));

	//double test11 = interp.interp2_onePoint(x, y, z, 25, 25, -2.875, -3.0, method);
	//double test12 = interp.interp2_onePoint(x, y, z, 25, 25, -2.750, -3.0, method);

	interp.interp2_multiPoint(x, y, z, 25, 25, a, b, 49, 49, fval, method);

	cout << "Test Interp2" << endl;
}

void testInterp2Onepoint() {
	Interp interp;
	double* x = (double*)malloc(sizeof(double*) * 3);
	for (int i = 0; i < 3; i++) {
		x[i] = 10 + i * 10;
	}
	double* y = (double*)malloc(sizeof(double*) * 5);
	for (int i = 0; i < 5; i++) {
		y[i] = 1950 + i * 10;
	}
	double** z = (double**)malloc(sizeof(double*) * 5);
	for (int i = 0; i < 5; i++) {
		z[i] = (double*)malloc(sizeof(double*) * 3);
	}





	z[0][0] = 150.697;
	z[0][1] = 199.592;
	z[0][2] = 187.625;
	z[1][0] = 179.323;
	z[1][1] = 195.072;
	z[1][2] = 250.287;
	z[2][0] = 203.212;
	z[2][1] = 179.092;
	z[2][2] = 322.767;
	z[3][0] = 226.505;
	z[3][1] = 153.706;
	z[3][2] = 426.730;
	z[4][0] = 249.633;
	z[4][1] = 120.281;
	z[4][2] = 598.243;




	const char* method = "spl";
	vector<vector<double>> fval(3, vector<double>(11));

	double w = interp.interp2_onePoint(x, y, z, 3, 5, 15, 1975, method);

	cout << "Test interp2" << endl;
}
